<template>
  <view class="wrapper">
    <view class="inner">
      <view class="main">
        <view>单词释义 【{{translateObj.word}}】</view>
        <view class="phonetic" hidden="{{!youdaoRes.hasBasic}}">音标: [{{youdaoRes.phonetic}}]</view>
        <repeat for="{{youdaoRes.explains}}">
          <view class="explains">{{item}}</view>
        </repeat>
        <view>
          <button class="btn-speech" hover-class="hover-speech" @tap="playSpeech1">发音1</button>
          <button class="btn-speech" hover-class="hover-speech" hidden="{{!youdaoRes.hasBasic}}" @tap="playSpeech2">发音2</button>
        </view>
      </view>
      <view class="footer">
        <button class="btn-footer btn-cancel" hover-class="none" @tap="closeToast">取消</button>
        <button class="btn-footer btn-add" hover-class="none" @tap="addNewWord">添加生词</button>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import MD5 from '../vendors/md5.js'
  export default class TranslateToast extends wepy.component {
    props = {
      translateObj: Object
    }
    data = {
      youdaoRes: {}
    }
    customData = {
      innerAudio1: wepy.createInnerAudioContext(),
      innerAudio2: wepy.createInnerAudioContext()
    }
    watch = {
      translateObj () {
        let {query, from, to, appKey, salt, sign} = this.getQueryArgs(this.translateObj.word)
        wepy.request({
          url: `http://openapi.youdao.com/api?q=${query}&from=${from}&to=${to}&appKey=${appKey}&salt=${salt}&sign=${sign}`,
          method: 'GET',
          success: (res) => {
            if (res.data.errorCode > 0) {
              console.log('youdao translate invoked fail')
            } else {
              console.log(res.data)
              // 只有查询单个单词时才会出现 basic 字段
              // 查询单词为hello-wrold 就不会有basic 字段
              if (res.data.basic) {
                let {explains, phonetic} = res.data.basic
                this.youdaoRes = {hasBasic: true, explains, phonetic}
                this.customData.innerAudio1.src = res.data.basic['uk-speech']
                this.customData.innerAudio2.src = res.data.basic['us-speech']
              } else {
                let {translation, tSpeakUrl} = res.data
                this.youdaoRes = {
                  hasBasic: false,
                  explains: translation
                }
                this.customData.innerAudio1.src = tSpeakUrl
              }
              this.$emit('showTranslateToast')
              this.$apply()
            }
          },
          fail: (err) => {
            console.log('err', err)
          }
        })
      }
    }
    events = {}
    methods = {
      translateWord () {
      },
      playSpeech1 () {
        console.log(this.innerAudio1)
        this.customData.innerAudio1.play()
      },
      playSpeech2 () {
        this.customData.innerAudio2.play()
      },
      closeToast () {
        this.$emit('closeTranslateToast')
      }
    }
    onLoad () {}
    // 返回有道翻译 api 调用所需的参数
    getQueryArgs (word) {
      let query = word
      query = query.replace(/[^-\w]*/g, '')
      let salt = Date.now().toString()
      let appKey = ''
      let key = ''
      let from = 'EN'
      let to = 'zh-CHS'
      let str1 = appKey + query + salt + key
      let sign = MD5(str1)
      return {query, from, to, appKey, salt, sign}
    }
  }
</script>

<style>
.wrapper{display: flex; justify-content: center; align-items: center;}
.inner {background: #fff; width: 80%; border-radius: 6px; font-size: 14px;}
.main { padding: 10px;}
.phonetic {color: lightskyblue;}
.explains {color: #aaa;}

.btn-speech {display: inline-block; font-size: 12px; padding: 0; color: #fff; background: rgba(0, 0, 0, 0.3); margin:0 2px; padding: 0 5px; line-height: 20px;}
.btn-speech::after {border: none;}
.hover-speech {background: rgba(0, 0, 0, 0.1);}

.footer {position: relative; border-top: 1rpx solid #eee;}
.footer::after {content: ''; display: block; width: 1rpx; position: absolute; height: 100%; top:0; left: 50%; background: #eee;}
.btn-footer {display: inline-block; width: 50%; font-size: 14px; background: #fff;}
.btn-footer::after {border: none;}
.btn-cancel {color: red;}
.btn-add {color: #22b14c;}
</style>
